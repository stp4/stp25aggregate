% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dapply2.R
\name{dapply2}
\alias{dapply2}
\alias{Dapply.formula}
\alias{Dapply.data.frame}
\title{Apply mit Hmisc labels}
\usage{
dapply2(.data, fun = function(x) as.numeric(x),
  stringsAsFactors = default.stringsAsFactors(), ...)

\method{Dapply}{formula}(x, .data, fun = function(x) as.numeric(x),
  stringsAsFactors = default.stringsAsFactors())

\method{Dapply}{data.frame}(.data, ..., fun = function(x) as.numeric(x),
  stringsAsFactors = default.stringsAsFactors())
}
\arguments{
\item{.data}{Data.frame}

\item{fun}{funktion}

\item{stringsAsFactors}{logical: should character vectors be converted to factors?}

\item{...}{Weitere Argumente an llply}
}
\value{
upData dataframe
}
\description{
Mischung usd der \code{llply} und \code{data.frame} -Funktion.
Erwartet einen data.frame und die Daten werdentransformiert.
Wenn keine Funktion uebergeben wird wird der Datensatz zu Zahlen transformiert.
}
\examples{

df <- tibble::tibble(
  month=c(1,2,3,1,2,3),
  student= gl(2,3, labels =c("Amy", "Bob")),
  A=c(9,7,6,8,6,9),
  B=c(6,7,8,5,6,7)
)

df <- Label(df, month="Monat")
str(dapply2(df, as.numeric))

strpurrr::(map_dfr(df, as.numeric))

}
\author{
Wolfgang Peter
}
