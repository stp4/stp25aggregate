% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Long.R, R/Melt2.R, R/Wide.R
\name{Long}
\alias{Long}
\alias{Long.formula}
\alias{Long.data.frame}
\alias{Long.list}
\alias{Melt2}
\alias{Melt2.formula}
\alias{Melt2.data.frame}
\alias{Melt2.default}
\alias{melt2}
\alias{Wide}
\alias{Wide.formula}
\alias{Wide.data.frame}
\title{Long und Wide}
\usage{
Long(x, ...)

\method{Long}{formula}(x, data, key = "variable", value = "value", ...)

\method{Long}{data.frame}(
  data,
  ...,
  by = NULL,
  key = "variable",
  value = "value",
  id.vars = all.vars(by)
)

\method{Long}{list}(x, data, by = NULL, key = NULL, value = NULL, key.levels = NULL, ...)

Melt2(x, ...)

\method{Melt2}{formula}(
  x,
  data,
  key = "variable",
  value = "value",
  na.action = na.pass,
  X = stp25formula::prepare_data2(x, data, na.action = na.action),
  id.vars = X$group.vars,
  ...
)

\method{Melt2}{data.frame}(x, ..., key = "variable", value = "value")

\method{Melt2}{default}(data, ..., key = "variable", value = "value")

melt2(x, ..., by = NULL, key = "variable", value = "value")

Wide(...)

\method{Wide}{formula}(x, data, value)

\method{Wide}{data.frame}(data, key, value)
}
\arguments{
\item{x}{data.frame oder formula}

\item{...}{weitere Argumente an melt}

\item{data}{Daten}

\item{key}{Bezeichnung der Bezeichner-Variable default ist "variable"}

\item{value}{Bezeichnung der Werte-Variable default ist "value"}

\item{by}{Gruppierung}

\item{id.vars}{nur bei Methode data.frame zu verwenden sonst ist hier nichts zu veraendern}

\item{key.levels}{wenn value gesetzt wird dann 1:nlevels}

\item{na.action}{auch nicht zu veraendern}

\item{X}{Formula-Objekt nicht Ã¤ndern}
}
\value{
data.frame

Dataframe in Langfor
}
\description{
Erweiterung von tidyr::pivot_longer tidyr::pivot_wider

Melt2 reshape2::melt()

melt2 ist die lazy_dots-Methode fur reshape2::melt()

Wide  entspricht tidyr::spread()

Quelle: https://community.rstudio.com/t/spread-with-multiple-value-columns/5378
}
\examples{

df <- data.frame(month=rep(1:3,2),
student=rep(c("Amy", "Bob"), each=3),
A=c(9, 7, 6, 8, 6, 9),
B=c(6, 7, 8, 5, 6, 7))

df2<-df \%>\% Wide(student, c(A, B))



df[-4] \%>\% tidyr::spread(student, A)
df[-4] \%>\% Wide(student, A)


df2  \%>\% Long( Amy_A, Amy_B, Bob_A, Bob_B, by=~month)


df
Long(list( A=c("Amy_A", "Bob_A"), B=c( "Amy_B", "Bob_B")),
     df2,
     by=~month,
     key = "student",
     key.level=c("Amy", "Bob")
)

df \%>\%
  tidyr::gather(variable, value, -(month:student)) \%>\%
  tidyr::unite(temp, student, variable) \%>\%
  tidyr::spread(temp, value)
x<-Melt2(chol0+chol1+chol6+chol12~g , hyper)
aggregate( value~variable, x, mean)

#-- Melt2.data.frame--

x  <- hyper[, c("g","chol0","chol1","chol6","chol12")]
x  <- Melt2(x, id.vars=1)
# aggregate(value~variable+g, x, mean)

# Alternative aber ohne die Labels
x <- hyper  \%>\%
    tidyr::gather("time", "chol", chol0:chol12) \%>\%
    dplyr::select(g, time, chol)


 head(x<-Melt2(chol0+chol1+chol6+chol12~g , hyper))
 # APA2(~.,x)

 head( x<- hyper \%>\%  melt2(chol0,chol1,chol6,chol12, by=~g))
 #APA2(~.,x)

#  suppressPackageStartupMessages(library(tidyverse))

dat <- data.frame(
  month = rep(1:3, 2),
  student = factor(rep(c("Amy", "Bob"), each = 3)),
  A = c(9, 7, 6, 8, 6, 9),
  B = c(6, 7, 8, 5, 6, 7)
)

dat \%>\% Wide(student,  c(A, B))
dat \%>\% Wide(student,  c("A", "B"))
dat[-3] \%>\% Wide(student,  B)
dat  \%>\% Wide(student ~ month)
#dat[-3] \%>\% reshape2::dcast(month ~ student)
dat  \%>\% Wide(month ~ student, A)
dat  \%>\% Wide(student ~ month, A)

}
