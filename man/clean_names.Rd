% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_names.R
\name{clean_names}
\alias{clean_names}
\alias{clean_names.data.frame}
\alias{clean_names.default}
\title{clean_names}
\usage{
clean_names(x, ...)

\method{clean_names}{data.frame}(data, label = TRUE, labels = NULL, ...)

\method{clean_names}{default}(
  x,
  tolower = TRUE,
  unique = TRUE,
  abbreviate = FALSE,
  minlength = 4,
 
    replace = c(`'` = "", `"` = "", `\%` = "_pct", `#` = "_cnt", Ã¤ = "ae", Ã¼ = "ue", Ã¶ = "oe", Ãœ = "Ue", Ã„ = "Ae", Ã– = "Oe", ÃŸ = "ss", `Â¨` = "", `&+` = "_and_", `@+` = "_at_", `_` = ".")
)
}
\arguments{
\item{x}{}

\item{data}{data.frame oder character}

\item{tolower}{}

\item{unique}{}

\item{abbreviate, minlength}{Abbkürzung}

\item{minlength}{}

\item{replace}{}

\item{abbreviate}{}
}
\value{
die selbe Klasse wie der Input
}
\description{
Alternative zu janitor  
Quelle https://drdoane.com/clean-consistent-column-names/

\code{clean_names} Input data.frame  output ist ein 
data.frame mit bereinigten namen.
}
\examples{


clean_names(tibble::tibble("Ã–li"=1:3, "p-k"=1:3, "95\%-CI"=4:6) )

c(
  c(
    "  a", "a  ", "a \%", "a",
    "$a", "$$$a", "GDP ($)",
    "GDP (us$)", "a (#)", "a & b",
    "#", "$", "a_cnt", "Aa&Bb",
    "camelCasePhrases", "AlphaBetaGamma",
    "Alpha       Beta", "Beta  !!! Gamma",
    "a + b", "a - b", "a * b", "Ã–sel"
  ), abbreviate=TRUE
)




df <- data.frame(
Ã–se = c(1, 2, 3, 1, 2, 3),
LÃ¶re = gl(2, 3, labels = c("Amy", "Bob")),
FÃ¼rn = c(9, 7, 6, 8, 6, 9),
MÃ¤ÃŸe = c(6, 7, 8, 5, 6, 7),
hÃ¼ne=c(1, 2, 3, 1, 2, 3)
)


clean_names(df)



}
